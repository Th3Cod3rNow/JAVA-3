interface Movable
{
    void moveUp();
    void moveDown();
    void moveLeft();
    void moveRight();
}

class MovablePoint implements Movable
{
    int x;
    int y;
    int xSpeed;
    int ySpeed;

    public MovablePoint(int x, int y, int xSpeed, int ySpeed) {
        this.x = x;
        this.y = y;
        this.xSpeed = xSpeed;
        this.ySpeed = ySpeed;
    }

    public void moveUp() { ySpeed += 1; }
    public void moveDown() { ySpeed -= 1; }
    public void moveLeft() { xSpeed += 1; }
    public void moveRight() { xSpeed -= 1; }

    @Override
    public String toString() {
        return "MovablePoint{" +
                "x=" + x +
                ", y=" + y +
                ", xSpeed=" + xSpeed +
                ", ySpeed=" + ySpeed +
                '}';
    }
}

class MovableCircle extends MovablePoint implements Movable
{
    int radius;
    MovablePoint center = new MovablePoint(0, 0, 0, 0);

    public MovableCircle(int x, int y, int xSpeed, int ySpeed, int radius) {
        super(x, y, xSpeed, ySpeed);
        this.radius = radius;
    }

    @Override
    public String toString() {
        return "MovableCircle{" +
                "radius=" + radius +
                ", center=" + center +
                '}';
    }
}

public class Main
{
    public static void main(String[] args)
    {
        Movable point = new MovablePoint(0, 0, 0, 0);
        System.out.println(point);
        point.moveUp();
        point.moveUp();
        point.moveUp();
        System.out.println(point);
    }
}
